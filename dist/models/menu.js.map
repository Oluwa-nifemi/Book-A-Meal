{"version":3,"sources":["../../models/menu.js"],"names":["p","path","join","__dirname","Menu","userId","date","orderItems","state","Object","assign","data","JSON","parse","fs","readFileSync","today","Date","todayFormatted","getDate","getMonth","getFullYear","menuToday","find","menu","keys","length","meals","push","writeFileSync","stringify","err","message","meal","getMenu","menus","index","findIndex","m","id","mealIndex","filter"],"mappings":"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","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst p = path.join(__dirname, '../data', 'menu.json');\r\n\r\nclass Menu {\r\n    constructor({\r\n        userId,\r\n        date,\r\n        orderItems,\r\n        state,\r\n    }) {\r\n        Object.assign(this, {\r\n            userId, date, orderItems, state,\r\n        });\r\n    }\r\n\r\n    static getMenu() {\r\n        try {\r\n            const data = JSON.parse(fs.readFileSync(p));\r\n            const today = new Date();\r\n            const todayFormatted = `${today.getDate()}-${today.getMonth() + 1}-${today.getFullYear()}`;\r\n            const menuToday = data.find(menu => `${menu.date}` === todayFormatted) || {};\r\n            if (!Object.keys(menuToday).length) {\r\n                menuToday.date = todayFormatted;\r\n                menuToday.meals = [];\r\n                data.push(menuToday);\r\n                fs.writeFileSync(p, JSON.stringify(data));\r\n            }\r\n            return menuToday;\r\n        } catch (err) {\r\n            return { err: err.message };\r\n        }\r\n    }\r\n\r\n    static addMeal(meal) {\r\n        const menu = this.getMenu();\r\n        const menus = JSON.parse(fs.readFileSync(p));\r\n        const index = menus.findIndex(m => m.date === menu.date);\r\n        if (!menu.meals.find(m => m.id === meal.id)) {\r\n            menu.meals.push(meal);\r\n            menus[index] = menu;\r\n            fs.writeFileSync(p, JSON.stringify(menus));\r\n            return meal;\r\n        }\r\n        return { err: 'Meal already in menu' };\r\n    }\r\n\r\n    static editMeal(meal) {\r\n        const menu = this.getMenu();\r\n        const menus = JSON.parse(fs.readFileSync(path.join(__dirname, '../data', 'menu.json')));\r\n        const index = menus.findIndex(m => m.date === menu.date);\r\n        const mealIndex = menu.meals.findIndex(m => m.id === meal.id);\r\n        if (mealIndex !== -1) {\r\n            menu.meals[mealIndex] = meal;\r\n            menus[index] = menu;\r\n            fs.writeFileSync(p, JSON.stringify(menus));\r\n            return meal;\r\n        }\r\n        return { err: \"Meal doesn't exist in menu\" };\r\n    }\r\n\r\n    static deleteMeal(id) {\r\n        const menu = this.getMenu();\r\n        const menus = JSON.parse(fs.readFileSync(p));\r\n        const index = menus.findIndex(m => m.date === menu.date);\r\n        menu.meals = menu.meals.filter(meal => meal.id !== id);\r\n        menus[index] = menu;\r\n        fs.writeFileSync(p, JSON.stringify(menus));\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n"],"file":"menu.js"}