{"version":3,"sources":["../../models/order.js"],"names":["p","path","join","__dirname","Order","userId","date","orderItems","state","Object","assign","orders","JSON","parse","constructor","getOrders","id","length","push","fs","writeFileSync","stringify","readFileSync","filter","order","find","e"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,CAAC,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,SAArB,EAAgC,aAAhC,CAAV;;IAEMC,K;;;AACF,uBAKG;AAAA,QAJCC,MAID,QAJCA,MAID;AAAA,QAHCC,IAGD,QAHCA,IAGD;AAAA,QAFCC,UAED,QAFCA,UAED;AAAA,QADCC,KACD,QADCA,KACD;;AAAA;;AACCC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoB;AAChBL,MAAAA,MAAM,EAANA,MADgB;AACRC,MAAAA,IAAI,EAAJA,IADQ;AACFC,MAAAA,UAAU,EAAVA,UADE;AACUC,MAAAA,KAAK,EAALA;AADV,KAApB;AAGH;;;;0BAMK;AACF,UAAMG,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,WAAL,CAAiBC,SAAjB,EAAX,CAAf;AACA,UAAMC,EAAE,GAAGL,MAAM,CAACM,MAAP,GAAgB,CAA3B;AACAN,MAAAA,MAAM,CAACO,IAAP;AAAcF,QAAAA,EAAE,EAAFA;AAAd,SAAqB,IAArB;;AACAG,kBAAGC,aAAH,CAAiBpB,CAAjB,EAAoBY,IAAI,CAACS,SAAL,CAAeV,MAAf,CAApB;;AACA;AAASK,QAAAA,EAAE,EAAFA;AAAT,SAAgB,IAAhB;AACH;;;gCAVkB;AAChB,aAAOG,YAAGG,YAAH,CAAgBtB,CAAhB,EAAmB,OAAnB,CAAP;AACF;;;kCAUoBK,M,EAAQ;AACzB,UAAIM,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKE,SAAL,EAAX,CAAb;AACAJ,MAAAA,MAAM,GAAGA,MAAM,CAACY,MAAP,CAAc,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACnB,MAAN,KAAiBA,MAArB;AAAA,OAAnB,CAAT;AACA,aAAOM,MAAP;AACH;;;8BAEgBK,E,EAAIR,K,EAAO;AACxB,UAAMG,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKE,SAAL,EAAX,CAAf;AACA,UAAMS,KAAK,GAAGb,MAAM,CAACc,IAAP,CAAY,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACV,EAAF,KAASA,EAAb;AAAA,OAAb,CAAd;;AACA,UAAIQ,KAAJ,EAAW;AACPA,QAAAA,KAAK,CAAChB,KAAN,GAAcA,KAAd;;AACAW,oBAAGC,aAAH,CAAiBpB,CAAjB,EAAoBY,IAAI,CAACS,SAAL,CAAeV,MAAf,CAApB;AACH;AACJ;;;4BAEaK,E,EAAI;AACd,UAAIL,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKE,SAAL,EAAX,CAAb;AACAJ,MAAAA,MAAM,GAAGA,MAAM,CAACY,MAAP,CAAc,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACR,EAAN,KAAaA,EAAb,IAAmBQ,KAAK,CAAChB,KAAN,KAAgB,SAAvC;AAAA,OAAnB,CAAT;;AACAW,kBAAGC,aAAH,CAAiBpB,CAAjB,EAAoBY,IAAI,CAACS,SAAL,CAAeV,MAAf,CAApB;AACH;;;;;;eAGUP,K","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst p = path.join(__dirname, '../data', 'orders.json');\r\n\r\nclass Order {\r\n    constructor({\r\n        userId,\r\n        date,\r\n        orderItems,\r\n        state,\r\n    }) {\r\n        Object.assign(this, {\r\n            userId, date, orderItems, state,\r\n        });\r\n    }\r\n\r\n    static getOrders() {\r\n       return fs.readFileSync(p, 'utf-8')\r\n    }\r\n\r\n    add() {\r\n        const orders = JSON.parse(this.constructor.getOrders());\r\n        const id = orders.length + 1;\r\n        orders.push({ id, ...this });\r\n        fs.writeFileSync(p, JSON.stringify(orders));\r\n        return { id, ...this };\r\n    }\r\n\r\n    static getUserOrders(userId) {\r\n        let orders = JSON.parse(this.getOrders());\r\n        orders = orders.filter(order => order.userId === userId);\r\n        return orders;\r\n    }\r\n\r\n    static editState(id, state) {\r\n        const orders = JSON.parse(this.getOrders());\r\n        const order = orders.find(e => e.id === id);\r\n        if (order) {\r\n            order.state = state;\r\n            fs.writeFileSync(p, JSON.stringify(orders));\r\n        }\r\n    }\r\n\r\n    static delete(id) {\r\n        let orders = JSON.parse(this.getOrders());\r\n        orders = orders.filter(order => order.id !== id || order.state !== 'pending');\r\n        fs.writeFileSync(p, JSON.stringify(orders));\r\n    }\r\n}\r\n\r\nexport default Order;\r\n"],"file":"order.js"}