{"version":3,"sources":["../index.js"],"names":["app","use","express","json","PORT","process","env","get","req","res","meal","Meal","fetchMeals","post","body","add","put","update","parseInt","params","id","delete","status","err","message","Menu","getMenu","addMeal","editMeal","deleteMeal","send","OrderItem","getOrderItems","userid","orderItem","edit","Order","getOrders","getUserOrders","order","editState","state","listen"],"mappings":"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","sourcesContent":["import express from 'express';\nimport Meal from './models/meal';\nimport Menu from './models/menu';\nimport OrderItem from './models/order-item';\nimport Order from './models/order';\n\nconst app = express();\n\napp.use(express.json());\n\nconst PORT = process.env.PORT || 3000;\n\n//  MEAL ROUTES\napp.get('/api/v1/meals', (req, res) => {\n    const meal = Meal.fetchMeals();\n    res.json(meal);\n});\n\napp.post('/api/v1/meals', (req, res) => {\n    const meal = new Meal({ ...req.body });\n    res.json(meal.add());\n});\n\napp.put('/api/v1/meals/:id', (req, res) => {\n    const meal = new Meal({ ...req.body });\n    res.json(meal.update(parseInt(req.params.id, 10)));\n});\n\napp.delete('/api/v1/meals/:id', (req, res) => {\n    try {\n        Meal.delete(parseInt(req.params.id, 10));\n        res.status(204).json();\n    } catch (err) {\n        res.json({ err: err.message });\n    }\n});\n\n//  MENU ROUTES\napp.get('/api/v1/menu', (req, res) => {\n    res.json(Menu.getMenu());\n});\n\napp.post('/api/v1/menu', (req, res) => {\n    res.json(Menu.addMeal(req.body));\n});\n\napp.put('/api/v1/menu', (req, res) => {\n    res.json(Menu.editMeal(req.body));\n});\n\napp.delete('/api/v1/menu/:id', (req, res) => {\n    Menu.deleteMeal(parseInt(req.params.id, 10));\n    res.status(204).send();\n});\n\n//  ORDER ITEM ROUTES\napp.get('/api/v1/order-items/:userid', (req, res) => {\n    res.json(OrderItem.getOrderItems(parseInt(req.params.userid, 10)));\n});\n\napp.post('/api/v1/order-items', (req, res) => {\n    const orderItem = new OrderItem(req.body);\n    res.json(orderItem.add());\n});\n\napp.put('/api/v1/order-items', (req, res) => {\n    res.json(OrderItem.edit(req.body));\n});\n\napp.delete('/api/v1/order-items/:id', (req, res) => {\n    OrderItem.delete(parseInt(req.params.id, 10));\n    res.status(204).send();\n});\n\n//  ORDER ROUTES\napp.get('/api/v1/orders', (req, res) => {\n    res.json(Order.getOrders());\n});\n\napp.get('/api/v1/orders/:userid', (req, res) => {\n    res.json(Order.getUserOrders(parseInt(req.params.userid, 10)));\n});\n\napp.post('/api/v1/orders', (req, res) => {\n    const order = new Order(req.body);\n    res.json(order.add());\n});\n\napp.put('/api/v1/orders/:id/:state', (req, res) => {\n    Order.editState(parseInt(req.params.id, 10), req.params.state);\n    res.status(200).send();\n});\n\napp.delete('/api/v1/orders/:id', (req, res) => {\n    Order.delete(parseInt(req.params.id, 10));\n    res.status(200).send();\n});\n\napp.listen(PORT);\n\nexport default app;\n"],"file":"index.js"}