{"version":3,"sources":["../../test/orders.test.js"],"names":["expect","chai","use","request","apiVersion","id","describe","it","app","get","then","res","JSON","parse","body","orders","to","be","an","invalid","filter","order","userId","length","equal","post","send","delete","text","catch","err","console","log","message","put"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport request from 'chai-http';\r\nimport app from '../index';\r\nimport fs from 'fs';\r\nimport path from 'path'; \r\n\r\nconst { expect, use } = chai;\r\n\r\nuse(request);\r\n\r\nconst apiVersion = '/api/v1';\r\n\r\n//Get id of item added during add order test to delete during delete order test\r\nlet id;\r\n\r\ndescribe('Get orders', () => {\r\n    it('Should return all orders', () => {\r\n        chai.request(app)\r\n            .get(`${apiVersion}/orders`)\r\n            .then(res => JSON.parse(res.body))\r\n            .then(orders => {\r\n                expect(orders).to.be.an('array')\r\n            })\r\n    })\r\n})\r\n\r\ndescribe('Get orders by user id', () => {\r\n    it('Should return all orders belong to that user', () => {\r\n        chai.request(app)\r\n            .get(`${apiVersion}/orders/1`)\r\n            .then(res => res.body)\r\n            .then(orders => {\r\n                expect(orders).to.be.an('array')\r\n                const invalid = orders.filter(order => order.userId !== 1).length;\r\n                expect(invalid).to.be.equal(0);\r\n            })\r\n    })\r\n})\r\n\r\ndescribe('Add order',() => {\r\n    it('Should return the added order', () => {\r\n        chai.request(app)\r\n            .post(`${apiVersion}/orders`)\r\n            .send(\r\n                {\r\n                    \"userId\" : 1,\r\n                    \"date\" : \"27-12-12\",\r\n                    \"orderItems\" : [1,4],\r\n                    \"state\" : \"pending\"\r\n                }\r\n            )\r\n            .then(res => res.body)\r\n            .then((order) => {\r\n                id = order.id;\r\n                expect(order).to.be.an('object');\r\n            })\r\n    })\r\n})\r\n\r\ndescribe('Delete order', () => {\r\n    it('Should return empty response', () => {\r\n        chai.request(app)\r\n        .delete(`${apiVersion}/orders/${id}`)\r\n        .then((res) => {\r\n            expect(res.text).to.be.equal('');\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n    })\r\n})\r\n\r\ndescribe('Edit order state',() => {\r\n    it('Should return empty response', () => {\r\n        chai.request(app)\r\n        .put(`${apiVersion}/orders/1/delivered`)\r\n        .then((res) => {\r\n            expect(res.text).to.be.equal('');\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n    })\r\n})"],"file":"orders.test.js"}